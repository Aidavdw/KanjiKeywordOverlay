##############################################################################################

                        Kanji OverLay v0.2.1 - Anki Plugin
						--------------------------------

Git: <a href="https://github.com/fanatic84/KanjiKeywordOverlay.git" rel="nofollow">https://github.com/fanatic84/KanjiKeywordOverlay.git</a>
Contact: fanatic84@gmail.com

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#- WHAT IS IT ? #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

Kanji OverLay is a anki-plugin used to display Keywords on Kanji (from Heisig or other)
When you move your cursor on a kanji, it display a pop-in with the corresponding keyword.

<img src="https://raw.githubusercontent.com/fanatic84/KanjiKeywordOverlay/master/screenshots/screen1.jpg">

---
Kanji OverLay can also change the color a kanji depending of your knowledge of them.
This needs a custom deck to be specified. See "How to use ?" for more informations.

<img src="https://raw.githubusercontent.com/fanatic84/KanjiKeywordOverlay/master/screenshots/screen2.jpg">

Red : kanji not seen
Blue : kanji not referenced at all (3007 kanji referenced by default so it is fairly rare)


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#- HOW TO USE ? #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

A. Do nothing :)

(If you have japanese plugin installed)

By default, Kanji OverLay plugin use a predefined English Keywords set using Heisig.
By default, When you specified the special tag : {{furigana:}} or {{kanji:}} in your template,
Kanji Overlay plugin will display information for kanji on kanjis of thoses expression.

----------------------------------------------------------------------------------------------
B.1 Configure The plugin

<a href="https://raw2.github.com/fanatic84/KanjiKeywordOverlay/master/screenshots/screen3.jpg" rel="nofollow">https://raw2.github.com/fanatic84/KanjiKeywordOverlay/master/screenshots/screen3.jpg</a>

a) With the dialogbox

a-1) Whats this? What can I do with this?
Kanji Overlay uses a default Database for showing the meaning of the Kanjis.
With this, you can simply use a Deck from Anki as that Database.

a-2) How do I use it?
You need a Deck in the form of:
FrontSide: [Kanji]
BackSide: Meaning

(you don't need to name the fields as "FrontSide" and "BackSide")

a-3) Option Explanation

Anki Profile
The Kanji overlay options you set are made for this Anki Profile.
If you don't know, what a profile is, then you probably only have one and therefore don't need to care about this

enable Kanji Overlay for the furigana Plugin
{{furigana:FIELDNAME}}
Kanji Overlay will also be shown in that field.
If you don't enable this option, then you need to write
{{kol:FIELDNAME}}

show default values for not existing values
If enabled, It will not only use your own deck as Kanji reference, but also the default database (if you enable this option, you don't have any color-overlay for unknown kanji)

Change style for Kanji knowledge level
With this option the colors of Kanjis will have three different styles for:
- already reviewed Kanjis
- Kanjis, that need to be reviewed
- Kanjis, that are not in the deck

Note: if you're only using the Kanji-deck as a database for kanji overlay, then you should deactivate this option. However you can change the style of the kanji

How do I change the color-settings for the Kanji?
Simply via css.
- class: unknown
will change the style of values found in your deck and not yet reviewed

- class: kol-missing
will change the style of values not found in your deck

- class: kol
will change the general style of kol and kanjis found in your deck and already reviewed

b) Or by modify "Kanji <a href="http://Overlay.py" rel="nofollow">Overlay.py</a>"

Localise the "Profiles" Variable in the top of the file, which would look like that:

----

Profiles = {
	"DEFAULT" : { #Profile by default
	    "KanjiUseCustomDeck" : False,
	    "KanjiCustomDeckName" : u'日本語::漢字::RTK13',
	    "KanjiCustomExpression" : "Kanji",
	    "KanjiCustomKeyword" : "Keyword",
	    "KanjiDisplayWithFuriganaMod" : True
        "KanjiUseLink" : False,
        "KanjiUseLinkUrl" : ''
	},
	"Other Profile Name" : { #Optional
		...
	}
}
----

* "KanjiUseCustomDeck" : True or False; Activate Custom Decks
* "KanjiCustomDeckName" : The full name of your kanji deck
* "KanjiCustomExpression" : the name of the field containing the kanji
* "KanjiCustomKeyword" : the name of the field containing the keyword
* "KanjiDisplayWithFuriganaMod" : True or False; Activate Kanji OverLay for
   {{furigana:}} or {{kanji:}} tags in your templates. True by default.
* "KanjiUseLink" : True or False; Activate link on a kanji
* "KanjiUseLinkUrl" : Specify the url to open a link when you click a kanji if KanjiUseLink is set to True
  for instance: <a href="http://tangorin.com/kanji/%s" rel="nofollow">http://tangorin.com/kanji/%s</a>
  The %s specify where you kanji is set in the url, so for instance if the kanji is 試
  Then the url would be <a href="http://tangorin.com/kanji/試" rel="nofollow">http://tangorin.com/kanji/試</a>

If the profile name of your account is not found, then Default is used.

B.2 Add special tags in your template {{kol:}} tag (Kanji OverLay)

You can activate Kanji OverLay on all fields using special {{kol:}} tag.
For instance, {{kol:Expression}}

----------------------------------------------------------------------------------------------
C. Change the style of the pop-in

You can change the style of the pop-in :
 - by editing the styles-kol.css in your plugin folder.
 - or by creating the styles-kol.css in your anki profile folder and making override there.

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#- CHANGES -#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

v0.2.1:
- Add an option to be able to add link that open a configurable url when you click on a kanji.
- Fix an issue where you couldn't copy / paste kanji without the definition

important:
---------------
The css loading has been changed. If you have styles configure it again. see C.

v0.2:
important:
---------------
- name of the Addon-file changed: no space
- 2 new menu items under Tools -&gt; Addons -&gt; Kanji Overlay
- GUI for Add-on configuration added

general:
-------------
- 2 new options:
	- load default DB in addition to custom
	- disable the color-changes for unknown kanji
- if custom database could not be loaded, the default DB will be loaded
- user can also choose to configure the plugin via python-code (option available in the top of the add-on)

in-code-changes:
------------------------
- split up the big load()-Function into smaller pieces
- added: reload()-function to reload the plugin
- for Debugging: option for always loading the database (even if no changes) is available
- loading of kanji-dictionary does not directly load into the self.kanjidict-variable. It loads to other temporary variables to enable loading of more than only one database at a time
- GUI is connected to anki via the 'ankiConnection'-class. For the run without anki or any testcases, there is an 'ankiConnectionMOCK'-class that holds test/default data

misc:
---------
- GUI can also be run independently for easier debugging

v0.1:
  - Display Keyword popup
  - Use custom Kanji Deck or predefined English Keyword (Heisig)
  - Reload kanji keyword dictionnary only if modified
  - Change color of the kanji if seen, missing


#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#- THANKS #-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
- Insperated from the anki v1 plugin of Brian Bush, Thanks !
- The plugin "Local css" for Anki 2 of Roland Sieker, Thanks !
- Big thanks for Ricky for Adding GUI for the plugin, Thanks !
- Thanks for Tyler for the help with some improvements and bug fixes, Thanks !
- Of corse, Damien Elmes for Anki &amp; Anki 2, Thanks !!
